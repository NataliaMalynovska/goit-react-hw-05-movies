{"version":3,"file":"static/js/607.6a4b284a.chunk.js","mappings":"gPAAO,IAAMA,EAAW,mCACXC,EACX,qFACWC,EAAc,mCACdC,EAAU,kC,+KCFVC,EAASC,EAAAA,GAAAA,GAAH,mGAMNC,EAAgBD,EAAAA,GAAAA,EAAH,8CAGbE,EAAOF,EAAAA,GAAAA,IAAH,oE,SC4BjB,EAjCgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE8BC,EAAAA,EAAAA,IAAkBH,GAFhD,OAEUI,EAFV,OAGIL,EAAWK,GAHf,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACP,KAGF,+BACE,SAACQ,EAAA,EAAD,CAAKC,GAAG,OAAOC,GAAG,OAAlB,SACGZ,EAAQa,OAAS,EAChBb,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,UAACnB,EAAD,YACE,UAACH,EAAD,eAAUoB,MACV,SAAClB,EAAD,UAAgBmB,MAFPC,EADD,KAOZ,iEAKT,C,8OClCDC,IAAAA,SAAAA,QAAA,gCAEO,IAAMC,EAAmB,mCAAG,6GAERD,IAAAA,IAAA,sCAAyCxB,EAAAA,KAFjC,cAEzB0B,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,gCAK/Bf,QAAQC,IAAR,MAL+B,yDAAH,qDASnBe,EAAiB,mCAAG,WAAMC,GAAN,gGAENN,IAAAA,IAAU,eAAgB,CAC/CO,OAAQ,CACNC,QAAShC,EAAAA,GACT8B,MAAOA,EACPG,SAAU,UACVC,KAAM,EACNC,eAAe,KARU,cAEvBT,EAFuB,yBAkBtBA,EAASC,KAAKC,SAlBQ,gCAoB7Bf,QAAQC,IAAR,MApB6B,yDAAH,sDAwBjBsB,EAAc,mCAAG,WAAM5B,GAAN,gGAEHgB,IAAAA,IAAA,gBACZhB,EADY,oBACOR,EAAAA,GADP,oBAFG,cAEpB0B,EAFoB,yBAKnBA,EAASC,MALU,gCAO1Bd,QAAQC,IAAR,MAP0B,yDAAH,sDAWduB,EAAc,mCAAG,WAAM7B,GAAN,gGAEHgB,IAAAA,IAAA,gBACZhB,EADY,4BACeR,EAAAA,GADf,oBAFG,cAEpB0B,EAFoB,yBAKnBA,EAASC,KAAKW,MALK,gCAO1BzB,QAAQC,IAAR,MAP0B,yDAAH,sDAWdH,EAAiB,mCAAG,WAAMH,GAAN,gGAENgB,IAAAA,IAAA,gBACZhB,EADY,4BACeR,EAAAA,GADf,2BAFM,cAEvB0B,EAFuB,yBAKtBA,EAASC,KAAKC,SALQ,gCAO7Bf,QAAQC,IAAR,MAP6B,yDAAH,sDAUjByB,EAAiB,mCAAG,WAAM/B,GAAN,gGAENgB,IAAAA,IAAA,gBACZhB,EADY,2BACcR,EAAAA,GADd,oBAFM,cAEvB0B,EAFuB,yBAKtBA,EAASC,KAAKC,SALQ,gCAO7Bf,QAAQC,IAAR,MAP6B,yDAAH,qD","sources":["components/Constant/Constant.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["export const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\nexport const CAST_IMG =\n  'https://feb.kuleuven.be/drc/LEER/visiting-scholars-1/image-not-available.jpg/image';\nexport const DEFAULT_IMG = 'https://europix.cc/no-poster.png';\nexport const API_KEY = '9a43726339c4236fb0854a5ef7e228c8';\n","import styled from 'styled-components';\n\nexport const Author = styled.h4`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\nexport const ReviewContent = styled.p`\n  padding: 8px 16px;\n`;\nexport const Item = styled.div`\n  text-align: start;\n  padding: 8px 16px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../services/api';\nimport { Box } from 'components/Box';\nimport { Item, Author, ReviewContent } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        const ReviewsInfo = await fetchMovieReviews(movieId);\n        setReviews(ReviewsInfo);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      <Box mt=\"16px\" mb=\"26px\">\n        {reviews.length > 0 ? (\n          reviews.map(({ author, content, id }) => (\n            <Item key={id}>\n              <Author> {author}</Author>\n              <ReviewContent>{content}</ReviewContent>\n            </Item>\n          ))\n        ) : (\n          <p>There are no reviews at this movie</p>\n        )}\n      </Box>\n    </>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n// import { toast } from 'react-toastify';\nimport { API_KEY } from '../components/Constant/Constant';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const response = await axios.get('search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: query,\n        language: 'en - US',\n        page: 1,\n        include_adult: false,\n      },\n    });\n\n    // const total = response.data.total_results;\n    // if (total === 0) {\n    //     toast.error(\n    //       'Sorry, there are no movies matching your search query. Please try again.'\n    //     );\n    //       }\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchMovieTrailer = async movieId => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/videos?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["IMG_PATH","CAST_IMG","DEFAULT_IMG","API_KEY","Author","styled","ReviewContent","Item","useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","ReviewsInfo","console","log","fetchReviews","Box","mt","mb","length","map","author","content","id","axios","fetchTrendingMovies","response","data","results","fetchSearchMovies","query","params","api_key","language","page","include_adult","fetchMovieById","fetchMovieCast","cast","fetchMovieTrailer"],"sourceRoot":""}